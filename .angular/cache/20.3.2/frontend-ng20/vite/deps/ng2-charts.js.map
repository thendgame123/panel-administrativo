{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng2-charts/fesm2022/ng2-charts.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, EventEmitter, Directive, Optional, Inject, Input, Output } from '@angular/core';\nimport { registerables, Chart, defaults } from 'chart.js';\nimport { merge } from 'lodash-es';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nconst NG_CHARTS_CONFIGURATION = new InjectionToken('Configuration for ngCharts');\n/**\n * Provide all the default registerable as defined by Chart.js\n */\nfunction withDefaultRegisterables(...registerables$1) {\n  return {\n    registerables: [...registerables, ...registerables$1]\n  };\n}\n/**\n * Provide configuration for ngCharts. In most cases, you have to pass it some registerables. So either\n * `withDefaultRegisterables()`, or a custom list of registerables tailored to your needs to reduce bundle size.\n */\nfunction provideCharts(...configurations) {\n  const config = merge({}, ...configurations);\n  return {\n    provide: NG_CHARTS_CONFIGURATION,\n    useValue: config\n  };\n}\nclass ThemeService {\n  constructor() {\n    this.colorschemesOptions = new BehaviorSubject(undefined);\n  }\n  setColorschemesOptions(options) {\n    this.pColorschemesOptions = options;\n    this.colorschemesOptions.next(options);\n  }\n  getColorschemesOptions() {\n    return this.pColorschemesOptions;\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ThemeService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThemeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass BaseChartDirective {\n  constructor(element, zone, themeService, config) {\n    this.zone = zone;\n    this.themeService = themeService;\n    this.type = 'bar';\n    this.plugins = [];\n    this.chartClick = new EventEmitter();\n    this.chartHover = new EventEmitter();\n    this.subs = [];\n    this.themeOverrides = {};\n    if (config?.registerables) {\n      Chart.register(...config.registerables);\n    }\n    if (config?.defaults) {\n      defaults.set(config.defaults);\n    }\n    this.ctx = element.nativeElement.getContext('2d');\n    this.subs.push(this.themeService.colorschemesOptions.pipe(distinctUntilChanged()).subscribe(r => this.themeChanged(r)));\n  }\n  ngOnChanges(changes) {\n    const requireRender = ['type'];\n    const propertyNames = Object.getOwnPropertyNames(changes);\n    if (propertyNames.some(key => requireRender.includes(key)) || propertyNames.every(key => changes[key].isFirstChange())) {\n      this.render();\n    } else {\n      const config = this.getChartConfiguration();\n      // Using assign to avoid changing the original object reference\n      if (this.chart) {\n        Object.assign(this.chart.config.data, config.data);\n        if (this.chart.config.plugins) {\n          Object.assign(this.chart.config.plugins, config.plugins);\n        }\n        if (this.chart.config.options) {\n          Object.assign(this.chart.config.options, config.options);\n        }\n      }\n      this.update();\n    }\n  }\n  ngOnDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    this.subs.forEach(s => s.unsubscribe());\n  }\n  render() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n    return this.zone.runOutsideAngular(() => this.chart = new Chart(this.ctx, this.getChartConfiguration()));\n  }\n  update(mode) {\n    if (this.chart) {\n      this.zone.runOutsideAngular(() => this.chart?.update(mode));\n    }\n  }\n  hideDataset(index, hidden) {\n    if (this.chart) {\n      this.chart.getDatasetMeta(index).hidden = hidden;\n      this.update();\n    }\n  }\n  isDatasetHidden(index) {\n    return this.chart?.getDatasetMeta(index)?.hidden;\n  }\n  toBase64Image() {\n    return this.chart?.toBase64Image();\n  }\n  themeChanged(options) {\n    this.themeOverrides = options;\n    if (this.chart) {\n      if (this.chart.config.options) {\n        Object.assign(this.chart.config.options, this.getChartOptions());\n      }\n      this.update();\n    }\n  }\n  getChartOptions() {\n    return merge({\n      onHover: (event, active) => {\n        if (!this.chartHover.observed && !this.chartHover.observers?.length) {\n          return;\n        }\n        this.zone.run(() => this.chartHover.emit({\n          event,\n          active\n        }));\n      },\n      onClick: (event, active) => {\n        if (!this.chartClick.observed && !this.chartClick.observers?.length) {\n          return;\n        }\n        this.zone.run(() => this.chartClick.emit({\n          event,\n          active\n        }));\n      }\n    }, this.themeOverrides, this.options, {\n      plugins: {\n        legend: {\n          display: this.legend\n        }\n      }\n    });\n  }\n  getChartConfiguration() {\n    return {\n      type: this.type,\n      data: this.getChartData(),\n      options: this.getChartOptions(),\n      plugins: this.plugins\n    };\n  }\n  getChartData() {\n    return this.data ? this.data : {\n      labels: this.labels || [],\n      datasets: this.datasets || []\n    };\n  }\n  static {\n    this.ɵfac = function BaseChartDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BaseChartDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(ThemeService), i0.ɵɵdirectiveInject(NG_CHARTS_CONFIGURATION, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseChartDirective,\n      selectors: [[\"canvas\", \"baseChart\", \"\"]],\n      inputs: {\n        type: \"type\",\n        legend: \"legend\",\n        data: \"data\",\n        options: \"options\",\n        plugins: \"plugins\",\n        labels: \"labels\",\n        datasets: \"datasets\"\n      },\n      outputs: {\n        chartClick: \"chartClick\",\n        chartHover: \"chartHover\"\n      },\n      exportAs: [\"base-chart\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: 'canvas[baseChart]',\n      exportAs: 'base-chart',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: ThemeService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NG_CHARTS_CONFIGURATION]\n    }]\n  }], {\n    type: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }],\n    labels: [{\n      type: Input\n    }],\n    datasets: [{\n      type: Input\n    }],\n    chartClick: [{\n      type: Output\n    }],\n    chartHover: [{\n      type: Output\n    }]\n  });\n})();\n\n/*\n * Public API Surface of ng2-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseChartDirective, NG_CHARTS_CONFIGURATION, ThemeService, provideCharts, withDefaultRegisterables };\n"],
  "mappings": "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",
  "names": []
}
